name: Test

on:
  pull_request:
  push:
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php:
          # PHP 5.3 is tested in coverage section
          - '5.4'
          - '5.5'
          - '5.6'
          - '7.0'
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
          # PHP 8.1 is tested in coverage section
        experimental: [false]

        include:
          - php: '8.2'
            experimental: true

    name: "Test on PHP ${{ matrix.php }}"
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: 'zend.assertions=1, error_reporting=-1, display_errors=On'
          coverage: none
          tools: cs2pr

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies - normal
        if: ${{ matrix.experimental == false }}
        uses: "ramsey/composer-install@v2"

      # For the PHP "nightly", we need to install with ignore platform reqs as not all dependencies allow it.
      - name: Install Composer dependencies - with ignore platform
        if: ${{ matrix.experimental == true }}
        uses: "ramsey/composer-install@v2"
        with:
          composer-options: --ignore-platform-reqs

      - name: Lint
        run: composer phplint -- --checkstyle | cs2pr

      - name: Run unit tests
        run: composer phpunit

  coverage:
    needs: test
    # Don't run on forks.
    if: github.repository_owner == 'php-parallel-lint' && needs.test.result == 'success'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - php: 5.3
          - php: 8.1
    name: "Coverage on PHP ${{ matrix.php }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup ini config
        id: set_ini
        run: |
          # On PHP 5.3, short_open_tag needs to be turned on for short open echo tags to be recognized
          # a PHP tags. As this only affects PHP 5.3, this is not something of serious concern.
          if [ ${{ matrix.php }} == "5.3" ]; then
            echo '::set-output name=PHP_INI::zend.assertions=1, error_reporting=-1, display_errors=On, short_open_tag=On'
          else
            echo '::set-output name=PHP_INI::zend.assertions=1, error_reporting=-1, display_errors=On'
          fi

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: ${{ steps.set_ini.outputs.PHP_INI }}
          coverage: xdebug
          tools: cs2pr

      # Remove the PHPCS standard as it has a minimum PHP requirements of PHP 5.4 and would block install on PHP 5.3.
      - name: 'Composer: remove PHPCS'
        if: ${{ matrix.php < 5.4 }}
        run: composer remove --dev php-parallel-lint/php-code-style --no-update --no-interaction

      - name: Install Composer dependencies - normal
        uses: "ramsey/composer-install@v2"

      - name: Lint
        run: composer phplint -- --checkstyle | cs2pr

      - name: Run the unit tests with code coverage
        run: composer coverage

      # Uploading the results with PHP Coveralls v1 won't work from GH Actions, so switch the PHP version.
      - name: Switch to PHP 8.1
        if: ${{ success() && matrix.php != '8.1' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none

      # Global installing is used for compatibility with composer.lock in PHP 5.3
      - name: Install Coveralls
        if: ${{ success() }}
        run: composer global require php-coveralls/php-coveralls:"^2.4.2" --no-interaction

      - name: Upload coverage results to Coveralls
        if: ${{ success() }}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: php-${{ matrix.php }}
        run: php-coveralls -v -x build/logs/clover.xml


  coveralls-finish:
    needs: coverage
    # Don't run on forks.
    if: github.repository_owner == 'php-parallel-lint' && needs.coverage.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
