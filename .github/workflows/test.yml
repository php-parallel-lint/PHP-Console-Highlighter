name: Test

on:
  pull_request:
  push:
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: ['5.3', '5.4', '5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1']
        experimental: [false]

        include:
          - php: '8.2'
            experimental: true

    name: "Test on PHP ${{ matrix.php }}"
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup ini config
        id: set_ini
        run: |
          # On PHP 5.3, short_open_tag needs to be turned on for short open echo tags to be recognized
          # a PHP tags. As this only affects PHP 5.3, this is not something of serious concern.
          if [ ${{ matrix.php }} == "5.3" ]; then
            echo '::set-output name=PHP_INI::zend.assertions=1, error_reporting=-1, display_errors=On, short_open_tag=On'
          else
            echo '::set-output name=PHP_INI::zend.assertions=1, error_reporting=-1, display_errors=On'
          fi

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: ${{ steps.set_ini.outputs.PHP_INI }}
          coverage: none
          tools: cs2pr

      # Remove the PHPCS standard as it has a minimum PHP requirements of PHP 5.4 and would block install on PHP 5.3.
      - name: 'Composer: remove PHPCS'
        if: ${{ matrix.php < 5.4 }}
        run: composer remove --dev php-parallel-lint/php-code-style --no-update --no-interaction

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies - normal
        if: ${{ matrix.experimental == false }}
        uses: "ramsey/composer-install@v2"

      # For the PHP "nightly", we need to install with ignore platform reqs as not all dependencies allow it.
      - name: Install Composer dependencies - with ignore platform
        if: ${{ matrix.experimental == true }}
        uses: "ramsey/composer-install@v2"
        with:
          composer-options: --ignore-platform-reqs

      - name: Lint
        run: composer phplint -- --checkstyle | cs2pr

      - name: Run unit tests
        run: composer phpunit
